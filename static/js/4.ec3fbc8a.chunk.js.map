{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","css","dialog","to","activeClassName","active","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","inputContainer","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,eAAiB,kC,+FCc9OC,EAXI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAIC,QAChB,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAII,QAASR,EAAMS,QCDpDC,EANC,SAACV,GACb,OACI,yBAAKG,UAAWC,IAAIO,SAAUX,EAAMW,U,iCCCtCC,EAAcC,YAAiB,IAWtBC,cAAU,CAACC,KAAM,wBAAjBD,EATQ,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,aAAcd,UAAWC,IAAIc,gBAC/C,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,iBAAkBa,YAAa,qBAAsBC,SAAU,CAACC,IAAUZ,KAC5G,4CCmBGa,EAzBC,SAACzB,GACb,IAAI0B,EAAkB1B,EAAM2B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,QAChG8B,EAAmBhC,EAAM2B,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAAUuB,EAAEvB,QAASoB,IAAKG,EAAEhC,QAMhG,OACI,yBAAKC,UAAWC,IAAIwB,SAChB,yBAAKzB,UAAWC,IAAI+B,cACfT,GAEL,yBAAKvB,UAAWC,IAAI6B,UAChB,6BACKD,GAEL,kBAAC,EAAD,CAAgBhB,SAbR,SAACoB,GACjBpC,EAAMqC,YAAYD,EAAOE,sB,gDCP3BC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,OCYRE,sBACXC,aAZoB,SAACJ,GACrB,MAAO,CACHb,YAAaa,EAAMb,gBAGA,SAACkB,GACxB,MAAO,CACHR,YAAa,SAACC,GAAD,OAAoBO,EAASC,YAAmBR,UDLrC,SAACS,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKjD,MAAMyC,OAGT,kBAACM,EAAcE,KAAKjD,OAFhB,kBAAC,IAAD,CAAUM,GAAG,eAJW,GACX4C,IAAMH,WAWtC,OAFuCH,YAAQL,EAARK,CAAoCI,KCDhEL,CAGblB","file":"static/js/4.ec3fbc8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Ke0PT\",\"dialogsItems\":\"Dialogs_dialogsItems__9nCib\",\"dialog\":\"Dialogs_dialog__3WFSg\",\"active\":\"Dialogs_active__2O3Ke\",\"messages\":\"Dialogs_messages__34emO\",\"message\":\"Dialogs_message__12wAF\",\"inputContainer\":\"Dialogs_inputContainer__3gVAg\"};","import React from 'react';\r\nimport css from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={css.dialog}>\r\n            <NavLink to={path} activeClassName={css.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport css from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={css.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport css from \"../Dialogs.module.css\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={css.inputContainer}>\r\n            <Field component={Textarea} name={'newMessageBody'} placeholder={'Enter Your message'} validate={[required, maxLength50]} />\r\n            <button>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport css from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message ={m.message} key={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={css.dialogs}>\r\n            <div className={css.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={css.messages}>\r\n                <div>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/login' />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import { sendMessageCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}