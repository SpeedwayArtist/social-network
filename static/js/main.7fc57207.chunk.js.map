{"version":3,"sources":["api/api.js","redux/dialogsReducer.js","components/Users/User.module.css","assets/images/user_avatar_placeholder.svg","assets/images/loader.gif","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.js","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["axiosInstance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","setAvatar","imgFile","formData","FormData","append","saveProfile","profile","authAPI","getAuth","loginRequest","email","password","rememberMe","captcha","logoutRequest","securityAPI","getCaptchaUrl","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","module","exports","FormControl","input","meta","touched","error","children","props","isError","className","css","formControl","React","cloneElement","Textarea","Input","createField","placeholder","validators","component","text","validate","Navbar","nav","item","to","activeClassName","active","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","setFollow","setUnfollow","setIsFetching","setFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducers","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","p","num","e","page","pageActive","key","User","user","userItem","disabled","some","src","photos","small","avatarPlaceholder","alt","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","console","log","Preloader","Component","mapDispatchToProps","bind","responseData","totalCount","compose","connect","Header","header","loginContainer","isAuth","login","GET_CAPTCHA_URL","captchaUrl","setAuthUserData","payload","setCaptchaUrl","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummaryError","pass","errMsg","length","stopSubmit","_error","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersReducer","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","ProfileContainer","lazy","DialogsContainer","App","catchAllUnhandledRejections","reason","alert","initializeApp","addEventListener","removeEventListener","path","render","LoginPage","from","AppContainer","promise","Promise","all","SamuraiJSApp","StrictMode","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","value","maxLengthCreator","maxLength","posts","likesCount","isEditMode","addPostCreator","newPostBody","setUserStatus","setUserProfileEditMode","getUserProfile","getUserStatus","updateUserStatus","avatar","getState","contacts","facebook","reject","newPost","newPostText","postId"],"mappings":"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","file":"static/js/main.7fc57207.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'c8203bd9-dd64-4cd7-9191-bfdc5a1ca3dd'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    follow(userId) {\r\n        return axiosInstance.post('follow/' + userId).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    unfollow(userId) {\r\n        return axiosInstance.delete('follow/' + userId).then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId = 2) {\r\n        return axiosInstance.get('profile/' + userId).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    getStatus(userId) {\r\n        return axiosInstance.get('profile/status/' + userId).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    updateStatus(status) {\r\n        return axiosInstance.put('profile/status', {status: status}).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    setAvatar(imgFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', imgFile)\r\n        return axiosInstance.put('/profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return axiosInstance.put('profile', profile).then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return axiosInstance.get('auth/me').then(response => {\r\n           return response.data;\r\n        });\r\n    },\r\n    loginRequest(email, password, rememberMe = false, captcha = null) {\r\n        return axiosInstance.post('auth/login', {email: email, password: password, rememberMe: rememberMe, captcha: captcha}).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    logoutRequest() {\r\n        return axiosInstance.delete('auth/login').then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return axiosInstance.get('security/get-captcha-url').then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'User 1'},\r\n        {id: 2, name: 'User 2'},\r\n        {id: 3, name: 'User 3'},\r\n        {id: 4, name: 'User 4'},\r\n        {id: 5, name: 'User from state.js'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Nice!'},\r\n        {id: 4, message: 'Message from state.js'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 5, message: action.newMessageBody}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"User_userItem__2zz4Q\"};","module.exports = __webpack_public_path__ + \"static/media/user_avatar_placeholder.d17c2f24.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader.fe24ae50.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2I1vW\",\"item\":\"Navbar_item__297h4\",\"active\":\"Navbar_active__Zl0e6\"};","import React from 'react';\r\nimport css from './FormsControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const isError = touched && error;\r\n    return (\r\n        <div className={css.formControl + \" \" + (isError ? css.error : '')}>\r\n            <div>\r\n                {React.cloneElement(children, {...input, ...props})}\r\n            </div>\r\n            {isError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return <FormControl {...props}><textarea /></FormControl>\r\n\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return <FormControl {...props}><input /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return <div>\r\n        <Field component={component} name={name} placeholder={placeholder} validate={validators} {...props} />{text}\r\n    </div>\r\n}","import React from 'react';\r\nimport css from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={css.nav}>\r\n            <div className={css.item}>\r\n                <NavLink to='/profile' activeClassName={css.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={css.item}>\r\n                <NavLink to='/dialogs' activeClassName={css.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={css.item}>\r\n                <NavLink to='/users' activeClassName={css.active}>Users</NavLink>\r\n            </div>\r\n            <div className={css.item}>\r\n                <NavLink to='/news' activeClassName={css.active}>News</NavLink>\r\n            </div>\r\n            <div className={css.item}>\r\n                <NavLink to='/music' activeClassName={css.active}>Music</NavLink>\r\n            </div>\r\n            <div className={css.item}>\r\n                <NavLink to='/settings' activeClassName={css.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport css from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport css from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport css from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u;\r\n    });\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING';\r\nconst SET_FOLLOWING_IN_PROGRESS = 'SET_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case SET_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case SET_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setFollow = (userId) => ({type: FOLLOW, userId});\r\nexport const setUnfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const setIsFetching = (isFetching) => ({type: SET_IS_FETCHING, isFetching: isFetching});\r\nexport const setFollowingInProgress = (isFetching, userId) => ({\r\n    type: SET_FOLLOWING_IN_PROGRESS,\r\n    isFetching: isFetching,\r\n    userId: userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let responseData = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(setIsFetching(false));\r\n        dispatch(setUsers(responseData.items));\r\n        dispatch(setUsersTotalCount(responseData.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(setFollowingInProgress(true, userId));\r\n    let responseData = await apiMethod(userId);\r\n    if (responseData.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(setFollowingInProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), setFollow);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), setUnfollow);\r\n    }\r\n}\r\n\r\nexport default usersReducers;","import React, {useState} from 'react';\r\nimport css from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={cn(css.paginator)}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => setPortionNumber(portionNumber - 1)}>Preview</button>}\r\n\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <=rightPortionPageNumber)\r\n            .map(num => {\r\n            return (\r\n                <span onClick={(e) => {\r\n                    onPageChanged(num)\r\n                }}\r\n                      className={cn(css.page, {[css.pageActive]: currentPage === num})}\r\n                      key={num}>{num}</span>\r\n            );\r\n        })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport css from './User.module.css';\r\nimport avatarPlaceholder from '../../assets/images/user_avatar_placeholder.svg';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className={css.userItem}>\r\n            {user.followed\r\n                ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                          onClick={() => {\r\n                              unfollow(user.id)\r\n                          }}>Unfollow</button>\r\n                : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                          onClick={() => {\r\n                              follow(user.id)\r\n                          }}>Follow</button>}\r\n            <NavLink to={'/profile/' + user.id}>\r\n                <img src={user.photos.small != null ? user.photos.small : avatarPlaceholder} alt=''/>\r\n            </NavLink>\r\n            <span>{user.name} </span>\r\n            <span>{user.status} </span>\r\n            <span>{'user.location.country'}</span>\r\n            <span>{'user.location.city'} </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return (\r\n        <>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}/>\r\n            <div>\r\n                {\r\n                    users.map(user => <User user={user} followingInProgress={props.followingInProgress}\r\n                                            unfollow={props.unfollow}\r\n                                            follow={props.follow}/>)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector,(users) => {\r\n    return users.filter(u => true)\r\n})\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setFollowingInProgress, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from '../../redux/users-selectors'\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (num) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(num, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        console.log('render');\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       unfollow={this.props.unfollow}\r\n                       follow={this.props.follow}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                       />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\nconst mapDispatchToProps = {follow, unfollow, setFollowingInProgress, requestUsers};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(UsersContainer);","import React from 'react';\r\nimport css from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={css.header}>\r\n            <img src='http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-880x660.png' alt='' />\r\n            <div className={css.loginContainer}>\r\n                {props.isAuth\r\n                    ? <div>\r\n                        {props.login}\r\n                        <button onClick={props.logoutRequest}>Logout</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_AUTH_USER_DATA = 'react-app/auth/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL = 'react-app/auth/GET_CAPTCHA_URL';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_AUTH_USER_DATA, payload: {id, email, login, isAuth}});\r\nexport const setCaptchaUrl = (captchaUrl) => ({type: GET_CAPTCHA_URL, captchaUrl});\r\n\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch) => {\r\n        let responseData = await authAPI.getAuth();\r\n        if (responseData.resultCode === 0) {\r\n            let {id, email, login} = responseData.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\nexport const loginRequest = (email, pass, rememberMe = false, captcha) => {\r\n    return async (dispatch) => {\r\n        let responseData = await authAPI.loginRequest(email, pass, rememberMe, captcha);\r\n        if (responseData.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            if (responseData.resultCode === 10) {\r\n                dispatch(getCaptchaUrl());\r\n            }\r\n            let errMsg = responseData.messages.length > 0 ? responseData.messages : 'Common error'\r\n            dispatch(stopSubmit('login', {_error: errMsg}));\r\n        }\r\n    }\r\n}\r\nexport const logoutRequest = () => {\r\n    return async (dispatch) => {\r\n        let responseData = await authAPI.logoutRequest();\r\n        if (responseData.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const responseData = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = responseData.url;\r\n    dispatch(setCaptchaUrl(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logoutRequest} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nconst mapDispatchToProps = {logoutRequest};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginRequest} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport css from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'Remember me')}\r\n            {captchaUrl && <img src={captchaUrl} alt={''}/>}\r\n            {captchaUrl && createField('Enter symbols from captcha', 'captcha', [required], Input)}\r\n            {error &&\r\n            <div className={css.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        props.loginRequest(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {loginRequest})\r\n)(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZING_SUCCESS = 'INITIALIZING_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializingSuccess = () => ({type: INITIALIZING_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializingSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from  'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    };\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport {HashRouter, BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\r\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\n//import ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends Component {\r\n    catchAllUnhandledRejections = ({reason}) => {\r\n        alert(reason);\r\n    }\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledRejections);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledRejections);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/news' component={News}/>\r\n                        <Route path='/music' component={Music}/>\r\n                        <Route path='/settings' component={Settings}/>\r\n                        <Route path='/login' component={LoginPage}/>\r\n                        <Redirect from=\"/\" to=\"/profile\" />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nconst AppContainer = connect(mapStateToProps, {initializeApp})(App);\r\n\r\nconst SamuraiJSApp = () => {\r\n    return <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>\r\n}\r\n\r\nexport default SamuraiJSApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <SamuraiJSApp />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__aW5qb\",\"error\":\"FormsControls_error__1gVl4\",\"formSummaryError\":\"FormsControls_formSummaryError__1zddp\"};","import React from \"react\";\r\nimport preloader from \"../../../assets/images/loader.gif\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt='' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n        if (value && value.length > maxLength) return 'Max lenght is ' + maxLength + ' symbols';\r\n        return undefined;\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3dy-1\",\"page\":\"Paginator_page__lbHVp\",\"pageActive\":\"Paginator_pageActive__2ktXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1wSXR\",\"loginContainer\":\"Header_loginContainer__1D21T\"};","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst SET_USER_AVATAR_SUCCESS = 'SET_USER_AVATAR_SUCCESS';\r\nconst SET_USER_PROFILE_EDIT_MODE = 'SET_USER_PROFILE_EDIT_MODE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'My first post', likesCount: 14},\r\n        {id: 2, message: 'My second post', likesCount: 145},\r\n        {id: 3, message: 'Props from state.js', likesCount: 322}\r\n    ],\r\n    profile: null,\r\n    isEditMode: false,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 4,\r\n                message: action.newPostBody,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_AVATAR_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.avatar}\r\n            }\r\n        }\r\n        case SET_USER_PROFILE_EDIT_MODE: {\r\n            return {\r\n                ...state,\r\n                isEditMode: action.isEditMode\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostCreator = (newPostBody) => ({type: ADD_POST, newPostBody});\r\nexport const deletePostCreator = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\nexport const setAvatarSuccess = (avatar) => ({type: SET_USER_AVATAR_SUCCESS, avatar});\r\nexport const setUserProfileEditMode = (isEditMode) => ({type: SET_USER_PROFILE_EDIT_MODE, isEditMode});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const responseData = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(responseData));\r\n}\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const responseData = await profileAPI.getStatus(userId);\r\n    dispatch(setUserStatus(responseData));\r\n}\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    try {\r\n        const responseData = await profileAPI.updateStatus(status);\r\n        if (responseData.resultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    } catch (error) {\r\n        alert(error);\r\n    }\r\n}\r\nexport const setAvatar = (imgFile) => async (dispatch) => {\r\n    const responseData = await profileAPI.setAvatar(imgFile);\r\n    if (responseData.resultCode === 0) {\r\n        dispatch(setAvatarSuccess(responseData.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const responseData = await profileAPI.saveProfile(profile);\r\n    if (responseData.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n        dispatch(setUserProfileEditMode(false));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile',{contacts: {facebook: responseData.messages[0]}}));\r\n        return Promise.reject(responseData.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}