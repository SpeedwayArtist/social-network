{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostFormRedux.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","className","css","avatar","src","photos","large","alt","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","memo","postElements","posts","map","p","key","id","postsContainer","values","addPost","newPostBody","postsItems","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getUserStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.e8d821c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ProfileInfo_header__CDzGq\",\"avatar\":\"ProfileInfo_avatar__1-Zcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"MyPosts_postsContainer__3iigP\",\"postsItems\":\"MyPosts_postsItems__1xJJn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2hNcP\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.state.status || \"Set status\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"Set status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport css from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from  './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={css.avatar}>\r\n                <img src={profile.photos.large ? profile.photos.large : 'https://upload.wikimedia.org/wikipedia/commons/7/7e/Circle-icons-profile.svg'} alt='' />\r\n                <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport css from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={css.item}>\r\n            <img src='https://upload.wikimedia.org/wikipedia/commons/7/7e/Circle-icons-profile.svg' alt='' />\r\n            <div>\r\n                {props.message}\r\n            </div>\r\n            <div>\r\n                <span>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newPostBody'} component={Textarea} placeholder={'Post message'} validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: 'addNewPost'\r\n})(AddPostForm);\r\n\r\nexport default AddPostFormRedux;","import React from 'react';\r\nimport css from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport AddPostFormRedux from \"./AddPostFormRedux\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    }\r\n\r\n    return (\r\n        <div className={css.postsContainer}>\r\n            <h3>\r\n                My posts\r\n            </h3>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={css.postsItems}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import { addPostCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst onSubmit = (formData) => {\r\n    console.log('submit')\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => dispatch(addPostCreator(newPostBody))\r\n    };\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport css from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}